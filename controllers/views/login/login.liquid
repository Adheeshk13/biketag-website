<script type="text/javascript">
	(((openAuthWindowInitialized) => { 
		if (!!openAuthWindowInitialized) return

		let windowObjectReference = null
		let previousUrl = null

		window.openAuthWindow = (url, name) => {

			const useEffect = () => {
				// get the URL parameters which will include the auth token
				const params = window.location.search;
				if (window.opener) {
					// send them to the opening window
					window.opener.postMessage(params);
					// close the popup
					window.close();
				}
			}

			const receiveMessage = event => {
				// Do we trust the sender of this message? (might be
				// different from what we originally opened, for example).
				if (event.origin !== BASE_URL) {
					return
				}
				const { data } = event
				// if we trust the sender and the source is our popup
				if (data.source === 'lma-login-redirect') {
					// get the URL params and redirect to our server to use Passport to auth/login
					const { payload } = data
					const redirectUrl = `/auth/${name}/login${payload}`
					window.location.pathname = redirectUrl
				}
			}
			// remove any existing event listeners
			window.removeEventListener('message', receiveMessage);

			// window features
			const strWindowFeatures =
				'toolbar=no, menubar=no, width=600, height=700, top=100, left=100';

			if (windowObjectReference === null || windowObjectReference.closed) {
				/* if the pointer to the window object in memory does not exist
				or if such pointer exists but the window was closed */
				windowObjectReference = window.open(url, name, strWindowFeatures)
			} else if (previousUrl !== url) {
				/* if the resource to load is different,
				then we load it in the already opened secondary window and then
				we bring such window back on top/in front of its parent window. */
				windowObjectReference = window.open(url, name, strWindowFeatures)
				windowObjectReference.focus()
			} else {
				/* else the window reference must exist and the window
				is not closed; therefore, we can bring it back on top of any other
				window with the focus() method. There would be no need to re-create
				the window or to reload the referenced resource. */
				windowObjectReference.focus()
			}

			// add the listener for receiving a message from the popup
			window.addEventListener('message', event => receiveMessage(event), false)
			// assign the previous URL
			previousUrl = url
		}

	}))(window.openAuthWindow)
</script>
<!-- Pills navs -->
<!-- <ul class="nav nav-pills nav-justified mb-3" id="ex1" role="tablist">
	<li class="nav-item" role="presentation">
	  <a
		class="nav-link active"
		id="tab-login"
		data-toggle="pill"
		href="#pills-login"
		role="tab"
		aria-controls="pills-login"
		aria-selected="true"
		>Login</a
	  >
	</li>
	<li class="nav-item" role="presentation">
	  <a
		class="nav-link"
		id="tab-register"
		data-toggle="pill"
		href="#pills-register"
		role="tab"
		aria-controls="pills-register"
		aria-selected="false"
		>Register</a
	  >
	</li>
</ul> -->


<!-- Pills content -->
<div class="tab-content">
	<div
		class="tab-pane fade show active"
		id="pills-login"
		role="tabpanel"
		aria-labelledby="tab-login"
	>
	<h3 class="form-signin-heading d-flex justify-content-center">[{{ name }}] wants to know: WhoAreYou?</h3>

	<form action="{{ loginUrl }}" method="post" name="Login_Form">
		<div class="text-center mb-3 sso-buttons">
		{% if sso.length %}
			<p>Sign in with:</p>
			{% assign provider_image = "" %}
			{% for provider in sso %}
				{% assign provider_image = "img/" | append: provider | append: 	"_signin.png" %}
				<button type="button" onclick="javascript:openAuthWindow(`/auth/{{ provider }}`, '{{ provider }}')" class="btn btn-primary btn-floating mx-1 {{ provider }} sso-button"><i class="fab fa-{{ provider }}""></i></button>

			{% endfor %}
		{% endif %}
		</div>

		<p class="text-center">or:</p>

		<!-- Email input -->
		<div class="form-outline mb-4">
			<input type="text" id="username" name="username" class="form-control" />
			<label class="form-label" for="username">Email or username</label>
		</div>

		<!-- Password input -->
		<div class="form-outline mb-4">
			<input type="password" id="password" name="password" class="form-control" />
			<label class="form-label" for="password">Password</label>
		</div>

		<!-- 2 column grid layout -->
		<div class="row mb-4">
			<div class="col-md-6 d-flex justify-content-center">
			<!-- Checkbox -->
			<div class="form-check mb-3 mb-md-0">
				<input
				class="form-check-input"
				type="checkbox"
				value=""
				id="loginCheck"
				checked
				/>
				<label class="form-check-label" for="loginCheck">
				Remember me
				</label>
			</div>
			</div>

			<div class="col-md-6 d-flex justify-content-center">
			<!-- Simple link -->
			<a href="#!">Forgot password?</a>
			</div>
		</div>

		<!-- Submit button -->
		<button type="submit" class="btn btn-primary btn-block mb-4">
			Sign in
		</button>
		</form>
	</div>
	<div
		class="tab-pane fade"
		id="pills-register"
		role="tabpanel"
		aria-labelledby="tab-register"
	>
	<form>
		<div class="text-center mb-3">
			{% if true %}
			<p>We do not currently support registering to manage BikeTag games. Send us an email at <a href="mailto:hello@biketag.org?subject=New Bike Tag Game&body=I would like to know more about becoming a BikeTag Ambassador in my city.">hello@biketag.org</a> if you would like information about how to start a game of BikeTag in your city!</p>
			
			{% else %}
			{% if sso.length %}
			<p>Sign up with:</p>
			
			{% assign provider_image = "" %}
			{% for provider in sso %}
			{% assign provider_image = "img/" | append: provider | append: 	"_signin.png" %}

			<button type="button" onclick="javascript:openAuthWindow(`/auth/{{ provider }}`, '{{ provider }}')" class="btn btn-primary btn-floating mx-1 {{ provider }} sso-button"><i class="fab fa-{{ provider }}""></i></button>
			{% endfor %}
			{% endif %}
			<!-- Submit button -->
			<button type="submit" class="btn btn-primary btn-block mb-3">
			Sign in
			</button>
			{% endif %}
		</div>
		</form>
	</div>
</div>
